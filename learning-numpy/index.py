import numpy as np

"""
https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.ndarray.html
ndarray：たいてい一定の大きさを持つ、同じサイズや型で構成された複数要素の多次元の容れ物である。
"""

# numpyでベクトル変算が可能
arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])

# print(arr1 + arr2)
"""
[5 7 9]
"""

# 二次元のarrayは[[],[]]とする
arr3 = np.array([[1, 2],[3, 4],[5, 6]])

# print(arr3)
"""
[[1 2]
 [3 4]
 [5 6]]
"""

# print(arr3.shape)
"""
シェイプを調べる
(3, 2)

arr3.shape[0]→3
arr3.shape[1]→2
"""

arr4 = np.arange(10)

# print(arr4)
"""
[0 1 2 3 4 5 6 7 8 9]
"""

# print(np.arange(9).reshape(3,3))
"""
3×3の行列
[[0 1 2]
 [3 4 5]
 [6 7 8]]
"""

# print(arr3.reshape(-1))
"""
「-1」を与えると一次元に戻す
[1 2 3 4 5 6]
"""

# print(np.zeros(3))
"""
[0. 0. 0.]
"""

# print(np.zeros([3, 3]))
"""
[[0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]]
"""

# print(np.empty([3, 3]))
"""
[[0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]]
"""

# print(np.ones([3, 3]))
"""
[[1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]]
"""

# print(np.eye(5))
"""
対角行列
[[1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]]
"""

# print(np.random.randn(3, 3))
"""
平均値：0、照準偏差：1の正規分布に従うarray
[[-0.50983645 -0.81111327 -0.23797695]
 [-0.38779619 -1.48915091  2.30044277]
 [-1.58871616  0.2664503  -1.71896367]]
"""