"""
ファイルの入出力
numpyと違い、pandasでは空白のセルがあってもNaNに自動補完してくれる
"""
import numpy as np
import pandas as pd

df_b = pd.read_csv("learning-pandas/data/brownian_x.csv", delimiter=",")

# print(df_b.head())
"""
   Unnamed: 0         0         1         2         3         4         5  ...        93        94        95        96        97        98        99
0           0  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  ...  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000  0.000000
1           1  2.660897  0.308681  1.150186  0.080541 -0.012792  0.691837  ... -0.784713  0.855479  0.858106 -0.071653 -1.243743  0.518966 -1.193671
2           2  3.598515  0.108084  1.751230 -0.317608 -0.219819  1.516001  ... -0.833061  2.135601 -0.372791 -0.086453  0.750444  1.616107 -1.558488
3           3  2.985630 -0.819268  0.730809 -2.676886  1.619011 -0.486863  ...  0.906403  1.582525 -0.128784  0.065607  1.319800  2.979209 -0.167360
4           4  3.768073 -0.303198  0.678676 -3.187084  2.514568 -0.358183  ...  1.885403  0.066579 -0.859434 -1.679999  0.500541  3.771645 -1.126620

[5 rows x 101 columns]
"""

df_p = pd.read_excel(
    "learning-pandas/data/physical_measurement.xlsx", sheet_name="Sheet1")

# print(df_p.head())
"""
sheet_name="Sheet1"は、特にシートを変更していない場合には指定しなくて良い。
headの引数に数字を入れるとその行数文取得できる。
   age      height  weight   sex
0   18  172.814251    75.0  male
1   18  159.925427    51.0  male
2   18  143.287031    45.0  male
3   18  172.929461    64.0  male
4   18  163.959781    55.0  male
"""

# df_b.to_csv("learning-pandas/data/sample.csv", sep=",")
# df_p.to_excel("learning-pandas/data/sample.xlsx")
